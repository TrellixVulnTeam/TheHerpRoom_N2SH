{"__symbolic":"module","version":4,"metadata":{"FormlyFieldInput":{"__symbolic":"class","extends":{"__symbolic":"reference","module":"@ngx-formly/core","name":"FieldType","line":13,"character":38},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":3,"character":1},"arguments":[{"selector":"formly-field-ion-input","template":"\n    <ion-input *ngIf=\"to.type !== 'number' else numberTmp\" [type]=\"to.type || 'text'\" [formControl]=\"formControl\" [ionFormlyAttributes]=\"field\"></ion-input>\n    <ng-template #numberTmp>\n      <ion-input type=\"number\" [formControl]=\"formControl\" [ionFormlyAttributes]=\"field\"></ion-input>\n    </ng-template>\n  ","styles":[":host { display: inherit; }"]}]}],"members":{}},"FormlyFieldCheckbox":{"__symbolic":"class","extends":{"__symbolic":"reference","module":"@ngx-formly/core","name":"FieldType","line":12,"character":41},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":3,"character":1},"arguments":[{"selector":"formly-field-ion-checkbox","template":"\n    <ion-checkbox\n      [formControl]=\"formControl\"\n      [ionFormlyAttributes]=\"field\">\n    </ion-checkbox>\n  "}]}],"members":{}},"FormlyFieldDatetime":{"__symbolic":"class","extends":{"__symbolic":"reference","module":"@ngx-formly/core","name":"FieldType","line":28,"character":41},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":3,"character":1},"arguments":[{"selector":"formly-field-ion-datetime","template":"\n    <ion-datetime\n      [cancelText]=\"to.cancelText\"\n      [dayNames]=\"to.dayNames\"\n      [dayShortNames]=\"to.dayShortNames\"\n      [dayValues]=\"to.dayValues\"\n      [displayFormat]=\"to.displayFormat\"\n      [doneText]=\"to.doneText\"\n      [hourValues]=\"to.hourValues\"\n      [minuteValues]=\"to.minuteValues\"\n      [monthNames]=\"to.monthNames\"\n      [monthShortNames]=\"to.monthShortNames\"\n      [monthValues]=\"to.monthValues\"\n      [pickerFormat]=\"to.pickerFormat\"\n      [pickerOptions]=\"to.pickerOptions\"\n      [yearValues]=\"to.yearValues\"\n      [min]=\"to.min\"\n      [max]=\"to.max\"\n      [formControl]=\"formControl\"\n      [ionFormlyAttributes]=\"field\">\n    </ion-datetime>\n  "}]}],"members":{}},"FormlyFieldRadio":{"__symbolic":"class","extends":{"__symbolic":"reference","module":"@ngx-formly/core","name":"FieldType","line":28,"character":38},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":3,"character":1},"arguments":[{"selector":"formly-field-ion-radio","template":"\n    <ion-list>\n      <ion-radio-group\n        [formControl]=\"formControl\"\n        [ionFormlyAttributes]=\"field\">\n        <ion-list-header>{{ to.label }}</ion-list-header>\n        <ion-item *ngFor=\"let option of to.options | formlySelectOptions:field | async\" [disabled]=\"option.disabled || formControl.disabled\">\n          <ion-label>{{ option.label }}</ion-label>\n          <ion-radio [value]=\"option.value\"></ion-radio>\n        </ion-item>\n      </ion-radio-group>\n    </ion-list>\n    <ion-item lines=\"none\" *ngIf=\"showError\">\n      <ion-label>\n        <ion-text color=\"danger\">\n          <p>\n            <formly-validation-message [field]=\"field\"></formly-validation-message>\n          </p>\n        </ion-text>\n      </ion-label>\n    </ion-item>\n  "}]}],"members":{}},"FormlyFieldToggle":{"__symbolic":"class","extends":{"__symbolic":"reference","module":"@ngx-formly/core","name":"FieldType","line":12,"character":39},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":3,"character":1},"arguments":[{"selector":"formly-field-ion-toggle","template":"\n    <ion-toggle\n      [formControl]=\"formControl\"\n      [ionFormlyAttributes]=\"field\">\n    </ion-toggle>\n  "}]}],"members":{}},"FormlyFieldSelect":{"__symbolic":"class","extends":{"__symbolic":"reference","module":"@ngx-formly/core","name":"FieldType","line":27,"character":39},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":3,"character":1},"arguments":[{"selector":"formly-field-ion-select","template":"\n    <!-- ng-container used as a workaround for https://github.com/ionic-team/ionic/issues/19324 -->\n    <ng-container *ngIf=\"to.options | formlySelectOptions:field | async; let selectOptions\">\n      <ion-select\n        [style.align-self]=\"to.labelPosition === 'floating' ? 'stretch':''\"\n        [style.max-width.%]=\"to.labelPosition === 'floating' ? 100 : ''\"\n\n        [formControl]=\"formControl\"\n        [compareWith]=\"to.compareWith\"\n        [ionFormlyAttributes]=\"field\"\n        [multiple]=\"to.multiple\"\n        [interface]=\"to.interface\"\n        [okText]=\"to.okText\"\n        [cancelText]=\"to.cancelText\">\n        <ion-select-option *ngFor=\"let option of selectOptions\" [value]=\"option.value\" [disabled]=\"option.disabled\">\n            {{ option.label }}\n        </ion-select-option>\n      </ion-select>\n    </ng-container>\n  ","styles":[":host { display: inherit; }"]}]}],"members":{}},"FormlyFieldRange":{"__symbolic":"class","extends":{"__symbolic":"reference","module":"@ngx-formly/core","name":"FieldType","line":17,"character":38},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":3,"character":1},"arguments":[{"selector":"formly-field-ion-range","template":"\n    <ion-range\n      [min]=\"to.min\"\n      [max]=\"to.max\"\n      [formControl]=\"formControl\"\n      [ionFormlyAttributes]=\"field\">\n      <ion-label slot=\"start\">{{ to.min }}</ion-label>\n      <ion-label slot=\"end\">{{ to.max }}</ion-label>\n    </ion-range>\n  ","styles":[":host { display: inherit; }"]}]}],"members":{}},"FormlyFieldTextArea":{"__symbolic":"class","extends":{"__symbolic":"reference","module":"@ngx-formly/core","name":"FieldType","line":15,"character":41},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":3,"character":1},"arguments":[{"selector":"formly-field-ion-textarea","template":"\n    <ion-textarea\n      [formControl]=\"formControl\"\n      [ionFormlyAttributes]=\"field\"\n      [cols]=\"to.cols\"\n      [rows]=\"to.rows\">\n    </ion-textarea>\n  ","styles":[":host { display: inherit; }"]}]}],"members":{}},"FormlyWrapperFormField":{"__symbolic":"class","extends":{"__symbolic":"reference","module":"@ngx-formly/core","name":"FieldWrapper","line":24,"character":44},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":3,"character":1},"arguments":[{"selector":"formly-wrapper-ion-form-field","template":"\n    <ion-item [lines]=\"to.itemLines\">\n      <ion-label [position]=\"to.labelPosition\">\n        {{ to.label }}\n        <span *ngIf=\"to.required && to.hideRequiredMarker !== true\">*</span>\n      </ion-label>\n      <ng-template #fieldComponent></ng-template>\n    </ion-item>\n    <ion-item lines=\"none\" *ngIf=\"showError\">\n      <ion-label>\n        <ion-text color=\"danger\">\n          <p>\n            <formly-validation-message [field]=\"field\"></formly-validation-message>\n          </p>\n        </ion-text>\n      </ion-label>\n    </ion-item>\n  "}]}],"members":{}},"FormlyIonicModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":9,"character":1},"arguments":[{"declarations":[{"__symbolic":"reference","name":"ɵa"},{"__symbolic":"reference","name":"ɵc"}],"imports":[{"__symbolic":"reference","module":"@angular/common","name":"CommonModule","line":12,"character":4},{"__symbolic":"reference","module":"@ionic/angular","name":"IonicModule","line":13,"character":4},{"__symbolic":"reference","module":"@angular/forms","name":"ReactiveFormsModule","line":14,"character":4},{"__symbolic":"reference","module":"@ngx-formly/core/select","name":"FormlySelectModule","line":15,"character":4},{"__symbolic":"call","expression":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@ngx-formly/core","name":"FormlyModule","line":16,"character":4},"member":"forChild"},"arguments":[{"__symbolic":"reference","name":"ɵb"}]}],"exports":[{"__symbolic":"reference","name":"ɵc"}]}]}],"members":{}},"ɵa":[{"__symbolic":"reference","name":"FormlyFieldInput"},{"__symbolic":"reference","name":"FormlyFieldCheckbox"},{"__symbolic":"reference","name":"FormlyFieldDatetime"},{"__symbolic":"reference","name":"FormlyFieldRadio"},{"__symbolic":"reference","name":"FormlyFieldToggle"},{"__symbolic":"reference","name":"FormlyFieldSelect"},{"__symbolic":"reference","name":"FormlyFieldRange"},{"__symbolic":"reference","name":"FormlyFieldTextArea"},{"__symbolic":"reference","name":"FormlyWrapperFormField"}],"ɵb":{"types":[{"name":"input","component":{"__symbolic":"reference","name":"FormlyFieldInput"},"wrappers":["form-field"]},{"name":"checkbox","component":{"__symbolic":"reference","name":"FormlyFieldCheckbox"},"wrappers":["form-field"]},{"name":"datetime","component":{"__symbolic":"reference","name":"FormlyFieldDatetime"},"wrappers":["form-field"]},{"name":"radio","component":{"__symbolic":"reference","name":"FormlyFieldRadio"},"wrappers":[]},{"name":"toggle","component":{"__symbolic":"reference","name":"FormlyFieldToggle"},"wrappers":["form-field"]},{"name":"select","component":{"__symbolic":"reference","name":"FormlyFieldSelect"},"wrappers":["form-field"]},{"name":"range","component":{"__symbolic":"reference","name":"FormlyFieldRange"},"wrappers":["form-field"]},{"name":"textarea","component":{"__symbolic":"reference","name":"FormlyFieldTextArea"},"wrappers":["form-field"]}],"wrappers":[{"name":"form-field","component":{"__symbolic":"reference","name":"FormlyWrapperFormField"}}]},"ɵc":{"__symbolic":"class","extends":{"__symbolic":"reference","module":"@ngx-formly/core","name":"FormlyAttributes","line":12,"character":41},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Directive","line":3,"character":1},"arguments":[{"selector":"[ionFormlyAttributes]","host":{"(ionFocus)":"onFocus($event)","(ionBlur)":"onBlur($event)","(ionChange)":"onChange($event)","$quoted$":["(ionFocus)","(ionBlur)","(ionChange)"]}}]}],"members":{"field":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":13,"character":3},"arguments":["ionFormlyAttributes"]}]}],"focusElement":[{"__symbolic":"method"}]}}},"origins":{"FormlyFieldInput":"./lib/types/input","FormlyFieldCheckbox":"./lib/types/checkbox","FormlyFieldDatetime":"./lib/types/datetime","FormlyFieldRadio":"./lib/types/radio","FormlyFieldToggle":"./lib/types/toggle","FormlyFieldSelect":"./lib/types/select","FormlyFieldRange":"./lib/types/range","FormlyFieldTextArea":"./lib/types/textarea","FormlyWrapperFormField":"./lib/wrappers/form-field","FormlyIonicModule":"./lib/ui-ionic.module","ɵa":"./lib/ui-ionic.config","ɵb":"./lib/ui-ionic.config","ɵc":"./lib/formly.attributes"},"importAs":"@ngx-formly/ionic"}