/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Directive, Input } from '@angular/core';
import { FormlyAttributes } from '@ngx-formly/core';
export class IonFormlyAttributes extends FormlyAttributes {
    /**
     * @param {?} element
     * @param {?} value
     * @return {?}
     */
    focusElement(element, value) {
        if (!element.setFocus || !value) {
            return;
        }
        if (!element.getInputElement()) {
            setTimeout((/**
             * @return {?}
             */
            () => element.setFocus()), 300);
        }
        else {
            element.setFocus();
        }
    }
}
IonFormlyAttributes.decorators = [
    { type: Directive, args: [{
                // tslint:disable-next-line
                selector: '[ionFormlyAttributes]',
                host: {
                    '(ionFocus)': 'onFocus($event)',
                    '(ionBlur)': 'onBlur($event)',
                    '(ionChange)': 'onChange($event)',
                },
            },] }
];
IonFormlyAttributes.propDecorators = {
    field: [{ type: Input, args: ['ionFormlyAttributes',] }]
};
if (false) {
    /** @type {?} */
    IonFormlyAttributes.prototype.field;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9ybWx5LmF0dHJpYnV0ZXMuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9Abmd4LWZvcm1seS9pb25pYy8iLCJzb3VyY2VzIjpbImxpYi9mb3JtbHkuYXR0cmlidXRlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDakQsT0FBTyxFQUFFLGdCQUFnQixFQUFxQixNQUFNLGtCQUFrQixDQUFDO0FBV3ZFLE1BQU0sT0FBTyxtQkFBb0IsU0FBUSxnQkFBZ0I7Ozs7OztJQUd2RCxZQUFZLENBQUMsT0FBTyxFQUFFLEtBQWM7UUFDbEMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRLElBQUksQ0FBQyxLQUFLLEVBQUU7WUFDL0IsT0FBTztTQUNSO1FBRUQsSUFBSSxDQUFDLE9BQU8sQ0FBQyxlQUFlLEVBQUUsRUFBRTtZQUM5QixVQUFVOzs7WUFBQyxHQUFHLEVBQUUsQ0FBQyxPQUFPLENBQUMsUUFBUSxFQUFFLEdBQUUsR0FBRyxDQUFDLENBQUM7U0FDM0M7YUFBTTtZQUNMLE9BQU8sQ0FBQyxRQUFRLEVBQUUsQ0FBQztTQUNwQjtJQUNILENBQUM7OztZQXRCRixTQUFTLFNBQUM7O2dCQUVULFFBQVEsRUFBRSx1QkFBdUI7Z0JBQ2pDLElBQUksRUFBRTtvQkFDSixZQUFZLEVBQUUsaUJBQWlCO29CQUMvQixXQUFXLEVBQUUsZ0JBQWdCO29CQUM3QixhQUFhLEVBQUUsa0JBQWtCO2lCQUNsQzthQUNGOzs7b0JBRUUsS0FBSyxTQUFDLHFCQUFxQjs7OztJQUE1QixvQ0FBdUQiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3RpdmUsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBGb3JtbHlBdHRyaWJ1dGVzLCBGb3JtbHlGaWVsZENvbmZpZyB9IGZyb20gJ0BuZ3gtZm9ybWx5L2NvcmUnO1xuXG5ARGlyZWN0aXZlKHtcbiAgLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lXG4gIHNlbGVjdG9yOiAnW2lvbkZvcm1seUF0dHJpYnV0ZXNdJyxcbiAgaG9zdDoge1xuICAgICcoaW9uRm9jdXMpJzogJ29uRm9jdXMoJGV2ZW50KScsXG4gICAgJyhpb25CbHVyKSc6ICdvbkJsdXIoJGV2ZW50KScsXG4gICAgJyhpb25DaGFuZ2UpJzogJ29uQ2hhbmdlKCRldmVudCknLFxuICB9LFxufSlcbmV4cG9ydCBjbGFzcyBJb25Gb3JtbHlBdHRyaWJ1dGVzIGV4dGVuZHMgRm9ybWx5QXR0cmlidXRlcyB7XG4gIEBJbnB1dCgnaW9uRm9ybWx5QXR0cmlidXRlcycpIGZpZWxkOiBGb3JtbHlGaWVsZENvbmZpZztcblxuICBmb2N1c0VsZW1lbnQoZWxlbWVudCwgdmFsdWU6IGJvb2xlYW4pIHtcbiAgICBpZiAoIWVsZW1lbnQuc2V0Rm9jdXMgfHwgIXZhbHVlKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgaWYgKCFlbGVtZW50LmdldElucHV0RWxlbWVudCgpKSB7XG4gICAgICBzZXRUaW1lb3V0KCgpID0+IGVsZW1lbnQuc2V0Rm9jdXMoKSwgMzAwKTtcbiAgICB9IGVsc2Uge1xuICAgICAgZWxlbWVudC5zZXRGb2N1cygpO1xuICAgIH1cbiAgfVxufVxuIl19