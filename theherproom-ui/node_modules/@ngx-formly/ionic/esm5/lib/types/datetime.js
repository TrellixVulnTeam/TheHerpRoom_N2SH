/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component } from '@angular/core';
import { FieldType } from '@ngx-formly/core';
var FormlyFieldDatetime = /** @class */ (function (_super) {
    tslib_1.__extends(FormlyFieldDatetime, _super);
    function FormlyFieldDatetime() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    FormlyFieldDatetime.decorators = [
        { type: Component, args: [{
                    selector: 'formly-field-ion-datetime',
                    template: "\n    <ion-datetime\n      [cancelText]=\"to.cancelText\"\n      [dayNames]=\"to.dayNames\"\n      [dayShortNames]=\"to.dayShortNames\"\n      [dayValues]=\"to.dayValues\"\n      [displayFormat]=\"to.displayFormat\"\n      [doneText]=\"to.doneText\"\n      [hourValues]=\"to.hourValues\"\n      [minuteValues]=\"to.minuteValues\"\n      [monthNames]=\"to.monthNames\"\n      [monthShortNames]=\"to.monthShortNames\"\n      [monthValues]=\"to.monthValues\"\n      [pickerFormat]=\"to.pickerFormat\"\n      [pickerOptions]=\"to.pickerOptions\"\n      [yearValues]=\"to.yearValues\"\n      [min]=\"to.min\"\n      [max]=\"to.max\"\n      [formControl]=\"formControl\"\n      [ionFormlyAttributes]=\"field\">\n    </ion-datetime>\n  "
                }] }
    ];
    return FormlyFieldDatetime;
}(FieldType));
export { FormlyFieldDatetime };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0ZXRpbWUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9Abmd4LWZvcm1seS9pb25pYy8iLCJzb3VyY2VzIjpbImxpYi90eXBlcy9kYXRldGltZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDMUMsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBRTdDO0lBeUJ5QywrQ0FBUztJQXpCbEQ7O0lBMEJBLENBQUM7O2dCQTFCQSxTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLDJCQUEyQjtvQkFDckMsUUFBUSxFQUFFLDJ0QkFxQlQ7aUJBQ0Y7O0lBRUQsMEJBQUM7Q0FBQSxBQTFCRCxDQXlCeUMsU0FBUyxHQUNqRDtTQURZLG1CQUFtQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRmllbGRUeXBlIH0gZnJvbSAnQG5neC1mb3JtbHkvY29yZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2Zvcm1seS1maWVsZC1pb24tZGF0ZXRpbWUnLFxuICB0ZW1wbGF0ZTogYFxuICAgIDxpb24tZGF0ZXRpbWVcbiAgICAgIFtjYW5jZWxUZXh0XT1cInRvLmNhbmNlbFRleHRcIlxuICAgICAgW2RheU5hbWVzXT1cInRvLmRheU5hbWVzXCJcbiAgICAgIFtkYXlTaG9ydE5hbWVzXT1cInRvLmRheVNob3J0TmFtZXNcIlxuICAgICAgW2RheVZhbHVlc109XCJ0by5kYXlWYWx1ZXNcIlxuICAgICAgW2Rpc3BsYXlGb3JtYXRdPVwidG8uZGlzcGxheUZvcm1hdFwiXG4gICAgICBbZG9uZVRleHRdPVwidG8uZG9uZVRleHRcIlxuICAgICAgW2hvdXJWYWx1ZXNdPVwidG8uaG91clZhbHVlc1wiXG4gICAgICBbbWludXRlVmFsdWVzXT1cInRvLm1pbnV0ZVZhbHVlc1wiXG4gICAgICBbbW9udGhOYW1lc109XCJ0by5tb250aE5hbWVzXCJcbiAgICAgIFttb250aFNob3J0TmFtZXNdPVwidG8ubW9udGhTaG9ydE5hbWVzXCJcbiAgICAgIFttb250aFZhbHVlc109XCJ0by5tb250aFZhbHVlc1wiXG4gICAgICBbcGlja2VyRm9ybWF0XT1cInRvLnBpY2tlckZvcm1hdFwiXG4gICAgICBbcGlja2VyT3B0aW9uc109XCJ0by5waWNrZXJPcHRpb25zXCJcbiAgICAgIFt5ZWFyVmFsdWVzXT1cInRvLnllYXJWYWx1ZXNcIlxuICAgICAgW21pbl09XCJ0by5taW5cIlxuICAgICAgW21heF09XCJ0by5tYXhcIlxuICAgICAgW2Zvcm1Db250cm9sXT1cImZvcm1Db250cm9sXCJcbiAgICAgIFtpb25Gb3JtbHlBdHRyaWJ1dGVzXT1cImZpZWxkXCI+XG4gICAgPC9pb24tZGF0ZXRpbWU+XG4gIGAsXG59KVxuZXhwb3J0IGNsYXNzIEZvcm1seUZpZWxkRGF0ZXRpbWUgZXh0ZW5kcyBGaWVsZFR5cGUge1xufVxuIl19