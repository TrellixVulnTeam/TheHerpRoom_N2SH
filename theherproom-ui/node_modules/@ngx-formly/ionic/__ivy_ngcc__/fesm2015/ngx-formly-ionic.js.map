{"version":3,"file":"ngx-formly-ionic.js","sources":["ng:/@ngx-formly/ionic/lib/types/input.ts","ng:/@ngx-formly/ionic/lib/types/checkbox.ts","ng:/@ngx-formly/ionic/lib/types/datetime.ts","ng:/@ngx-formly/ionic/lib/types/radio.ts","ng:/@ngx-formly/ionic/lib/types/toggle.ts","ng:/@ngx-formly/ionic/lib/types/select.ts","ng:/@ngx-formly/ionic/lib/types/range.ts","ng:/@ngx-formly/ionic/lib/types/textarea.ts","ng:/@ngx-formly/ionic/lib/wrappers/form-field.ts","ng:/@ngx-formly/ionic/lib/ui-ionic.config.ts","ng:/@ngx-formly/ionic/lib/formly.attributes.ts","ng:/@ngx-formly/ionic/lib/ui-ionic.module.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component } from '@angular/core';\nimport { FieldType } from '@ngx-formly/core';\n\n@Component({\n  selector: 'formly-field-ion-input',\n  template: `\n    <ion-input *ngIf=\"to.type !== 'number' else numberTmp\" [type]=\"to.type || 'text'\" [formControl]=\"formControl\" [ionFormlyAttributes]=\"field\"></ion-input>\n    <ng-template #numberTmp>\n      <ion-input type=\"number\" [formControl]=\"formControl\" [ionFormlyAttributes]=\"field\"></ion-input>\n    </ng-template>\n  `,\n  styles: [':host { display: inherit; }'],\n})\nexport class FormlyFieldInput extends FieldType {}\n","import { Component } from '@angular/core';\nimport { FieldType } from '@ngx-formly/core';\n\n@Component({\n  selector: 'formly-field-ion-checkbox',\n  template: `\n    <ion-checkbox\n      [formControl]=\"formControl\"\n      [ionFormlyAttributes]=\"field\">\n    </ion-checkbox>\n  `,\n})\nexport class FormlyFieldCheckbox extends FieldType {\n}\n","import { Component } from '@angular/core';\nimport { FieldType } from '@ngx-formly/core';\n\n@Component({\n  selector: 'formly-field-ion-datetime',\n  template: `\n    <ion-datetime\n      [cancelText]=\"to.cancelText\"\n      [dayNames]=\"to.dayNames\"\n      [dayShortNames]=\"to.dayShortNames\"\n      [dayValues]=\"to.dayValues\"\n      [displayFormat]=\"to.displayFormat\"\n      [doneText]=\"to.doneText\"\n      [hourValues]=\"to.hourValues\"\n      [minuteValues]=\"to.minuteValues\"\n      [monthNames]=\"to.monthNames\"\n      [monthShortNames]=\"to.monthShortNames\"\n      [monthValues]=\"to.monthValues\"\n      [pickerFormat]=\"to.pickerFormat\"\n      [pickerOptions]=\"to.pickerOptions\"\n      [yearValues]=\"to.yearValues\"\n      [min]=\"to.min\"\n      [max]=\"to.max\"\n      [formControl]=\"formControl\"\n      [ionFormlyAttributes]=\"field\">\n    </ion-datetime>\n  `,\n})\nexport class FormlyFieldDatetime extends FieldType {\n}\n","import { Component } from '@angular/core';\nimport { FieldType } from '@ngx-formly/core';\n\n@Component({\n  selector: 'formly-field-ion-radio',\n  template: `\n    <ion-list>\n      <ion-radio-group\n        [formControl]=\"formControl\"\n        [ionFormlyAttributes]=\"field\">\n        <ion-list-header>{{ to.label }}</ion-list-header>\n        <ion-item *ngFor=\"let option of to.options | formlySelectOptions:field | async\" [disabled]=\"option.disabled || formControl.disabled\">\n          <ion-label>{{ option.label }}</ion-label>\n          <ion-radio [value]=\"option.value\"></ion-radio>\n        </ion-item>\n      </ion-radio-group>\n    </ion-list>\n    <ion-item lines=\"none\" *ngIf=\"showError\">\n      <ion-label>\n        <ion-text color=\"danger\">\n          <p>\n            <formly-validation-message [field]=\"field\"></formly-validation-message>\n          </p>\n        </ion-text>\n      </ion-label>\n    </ion-item>\n  `,\n})\nexport class FormlyFieldRadio extends FieldType {\n  defaultOptions = {\n    templateOptions: { options: [] },\n  };\n}\n","import { Component } from '@angular/core';\nimport { FieldType } from '@ngx-formly/core';\n\n@Component({\n  selector: 'formly-field-ion-toggle',\n  template: `\n    <ion-toggle\n      [formControl]=\"formControl\"\n      [ionFormlyAttributes]=\"field\">\n    </ion-toggle>\n  `,\n})\nexport class FormlyFieldToggle extends FieldType {}\n","import { Component } from '@angular/core';\nimport { FieldType } from '@ngx-formly/core';\n\n@Component({\n  selector: 'formly-field-ion-select',\n  template: `\n    <!-- ng-container used as a workaround for https://github.com/ionic-team/ionic/issues/19324 -->\n    <ng-container *ngIf=\"to.options | formlySelectOptions:field | async; let selectOptions\">\n      <ion-select\n        [style.align-self]=\"to.labelPosition === 'floating' ? 'stretch':''\"\n        [style.max-width.%]=\"to.labelPosition === 'floating' ? 100 : ''\"\n\n        [formControl]=\"formControl\"\n        [compareWith]=\"to.compareWith\"\n        [ionFormlyAttributes]=\"field\"\n        [multiple]=\"to.multiple\"\n        [interface]=\"to.interface\"\n        [okText]=\"to.okText\"\n        [cancelText]=\"to.cancelText\">\n        <ion-select-option *ngFor=\"let option of selectOptions\" [value]=\"option.value\" [disabled]=\"option.disabled\">\n            {{ option.label }}\n        </ion-select-option>\n      </ion-select>\n    </ng-container>\n  `,\n  styles: [':host { display: inherit; }'],\n})\nexport class FormlyFieldSelect extends FieldType {\n  defaultOptions = {\n    templateOptions: {\n      options: [],\n      compareWith(o1: any, o2: any) {\n        return o1 === o2;\n      },\n    },\n  };\n}\n","import { Component } from '@angular/core';\nimport { FieldType } from '@ngx-formly/core';\n\n@Component({\n  selector: 'formly-field-ion-range',\n  template: `\n    <ion-range\n      [min]=\"to.min\"\n      [max]=\"to.max\"\n      [formControl]=\"formControl\"\n      [ionFormlyAttributes]=\"field\">\n      <ion-label slot=\"start\">{{ to.min }}</ion-label>\n      <ion-label slot=\"end\">{{ to.max }}</ion-label>\n    </ion-range>\n  `,\n  styles: [':host { display: inherit; }'],\n})\nexport class FormlyFieldRange extends FieldType {}\n","import { Component } from '@angular/core';\nimport { FieldType } from '@ngx-formly/core';\n\n@Component({\n  selector: 'formly-field-ion-textarea',\n  template: `\n    <ion-textarea\n      [formControl]=\"formControl\"\n      [ionFormlyAttributes]=\"field\"\n      [cols]=\"to.cols\"\n      [rows]=\"to.rows\">\n    </ion-textarea>\n  `,\n  styles: [':host { display: inherit; }'],\n})\nexport class FormlyFieldTextArea extends FieldType {}\n","import { Component } from '@angular/core';\nimport { FieldWrapper } from '@ngx-formly/core';\n\n@Component({\n  selector: 'formly-wrapper-ion-form-field',\n  template: `\n    <ion-item [lines]=\"to.itemLines\">\n      <ion-label [position]=\"to.labelPosition\">\n        {{ to.label }}\n        <span *ngIf=\"to.required && to.hideRequiredMarker !== true\">*</span>\n      </ion-label>\n      <ng-template #fieldComponent></ng-template>\n    </ion-item>\n    <ion-item lines=\"none\" *ngIf=\"showError\">\n      <ion-label>\n        <ion-text color=\"danger\">\n          <p>\n            <formly-validation-message [field]=\"field\"></formly-validation-message>\n          </p>\n        </ion-text>\n      </ion-label>\n    </ion-item>\n  `,\n})\nexport class FormlyWrapperFormField extends FieldWrapper {}\n","import { ConfigOption } from '@ngx-formly/core';\nimport {\n  FormlyFieldInput,\n  FormlyFieldCheckbox,\n  FormlyFieldDatetime,\n  FormlyFieldRadio,\n  FormlyFieldToggle,\n  FormlyFieldSelect,\n  FormlyFieldRange,\n  FormlyFieldTextArea,\n} from './types/types';\nimport { FormlyWrapperFormField } from './wrappers/wrappers';\n\n\nexport const FIELD_TYPE_COMPONENTS = [\n  // types\n  FormlyFieldInput,\n  FormlyFieldCheckbox,\n  FormlyFieldDatetime,\n  FormlyFieldRadio,\n  FormlyFieldToggle,\n  FormlyFieldSelect,\n  FormlyFieldRange,\n  FormlyFieldTextArea,\n\n  // wrappers\n  FormlyWrapperFormField,\n];\n\nexport const IONIC_FORMLY_CONFIG: ConfigOption = {\n  types: [\n    {\n      name: 'input',\n      component: FormlyFieldInput,\n      wrappers: ['form-field'],\n    },\n    {\n      name: 'checkbox',\n      component: FormlyFieldCheckbox,\n      wrappers: ['form-field'],\n    },\n    {\n      name: 'datetime',\n      component: FormlyFieldDatetime,\n      wrappers: ['form-field'],\n    },\n    {\n      name: 'radio',\n      component: FormlyFieldRadio,\n      wrappers: [],\n    },\n    {\n      name: 'toggle',\n      component: FormlyFieldToggle,\n      wrappers: ['form-field'],\n    },\n    {\n      name: 'select',\n      component: FormlyFieldSelect,\n      wrappers: ['form-field'],\n    },\n    {\n      name: 'range',\n      component: FormlyFieldRange,\n      wrappers: ['form-field'],\n    },\n    {\n      name: 'textarea',\n      component: FormlyFieldTextArea,\n      wrappers: ['form-field'],\n    },\n  ],\n  wrappers: [\n    { name: 'form-field', component: FormlyWrapperFormField },\n  ],\n};\n","import { Directive, Input } from '@angular/core';\nimport { FormlyAttributes, FormlyFieldConfig } from '@ngx-formly/core';\n\n@Directive({\n  // tslint:disable-next-line\n  selector: '[ionFormlyAttributes]',\n  host: {\n    '(ionFocus)': 'onFocus($event)',\n    '(ionBlur)': 'onBlur($event)',\n    '(ionChange)': 'onChange($event)',\n  },\n})\nexport class IonFormlyAttributes extends FormlyAttributes {\n  @Input('ionFormlyAttributes') field: FormlyFieldConfig;\n\n  focusElement(element, value: boolean) {\n    if (!element.setFocus || !value) {\n      return;\n    }\n\n    if (!element.getInputElement()) {\n      setTimeout(() => element.setFocus(), 300);\n    } else {\n      element.setFocus();\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { FormlyModule } from '@ngx-formly/core';\nimport { FormlySelectModule } from '@ngx-formly/core/select';\nimport { IONIC_FORMLY_CONFIG, FIELD_TYPE_COMPONENTS } from './ui-ionic.config';\nimport { IonFormlyAttributes } from './formly.attributes';\n\n@NgModule({\n  declarations: [FIELD_TYPE_COMPONENTS, IonFormlyAttributes],\n  imports: [\n    CommonModule,\n    IonicModule,\n    ReactiveFormsModule,\n    FormlySelectModule,\n    FormlyModule.forChild(IONIC_FORMLY_CONFIG),\n  ],\n  exports: [IonFormlyAttributes],\n})\nexport class FormlyIonicModule {\n}\n"]}