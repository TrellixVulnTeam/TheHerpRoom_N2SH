/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component } from '@angular/core';
import { FieldType } from '@ngx-formly/core';
var FormlyFieldSelect = /** @class */ (function (_super) {
    tslib_1.__extends(FormlyFieldSelect, _super);
    function FormlyFieldSelect() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.defaultOptions = {
            templateOptions: {
                options: [],
                compareWith: /**
                 * @param {?} o1
                 * @param {?} o2
                 * @return {?}
                 */
                function (o1, o2) {
                    return o1 === o2;
                },
            },
        };
        return _this;
    }
    FormlyFieldSelect.decorators = [
        { type: Component, args: [{
                    selector: 'formly-field-ion-select',
                    template: "\n    <!-- ng-container used as a workaround for https://github.com/ionic-team/ionic/issues/19324 -->\n    <ng-container *ngIf=\"to.options | formlySelectOptions:field | async; let selectOptions\">\n      <ion-select\n        [style.align-self]=\"to.labelPosition === 'floating' ? 'stretch':''\"\n        [style.max-width.%]=\"to.labelPosition === 'floating' ? 100 : ''\"\n\n        [formControl]=\"formControl\"\n        [compareWith]=\"to.compareWith\"\n        [ionFormlyAttributes]=\"field\"\n        [multiple]=\"to.multiple\"\n        [interface]=\"to.interface\"\n        [okText]=\"to.okText\"\n        [cancelText]=\"to.cancelText\">\n        <ion-select-option *ngFor=\"let option of selectOptions\" [value]=\"option.value\" [disabled]=\"option.disabled\">\n            {{ option.label }}\n        </ion-select-option>\n      </ion-select>\n    </ng-container>\n  ",
                    styles: [':host { display: inherit; }']
                }] }
    ];
    return FormlyFieldSelect;
}(FieldType));
export { FormlyFieldSelect };
if (false) {
    /** @type {?} */
    FormlyFieldSelect.prototype.defaultOptions;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VsZWN0LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQG5neC1mb3JtbHkvaW9uaWMvIiwic291cmNlcyI6WyJsaWIvdHlwZXMvc2VsZWN0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMxQyxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFFN0M7SUF3QnVDLDZDQUFTO0lBeEJoRDtRQUFBLHFFQWlDQztRQVJDLG9CQUFjLEdBQUc7WUFDZixlQUFlLEVBQUU7Z0JBQ2YsT0FBTyxFQUFFLEVBQUU7Z0JBQ1gsV0FBVzs7Ozs7MEJBQUMsRUFBTyxFQUFFLEVBQU87b0JBQzFCLE9BQU8sRUFBRSxLQUFLLEVBQUUsQ0FBQztnQkFDbkIsQ0FBQzthQUNGO1NBQ0YsQ0FBQzs7SUFDSixDQUFDOztnQkFqQ0EsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSx5QkFBeUI7b0JBQ25DLFFBQVEsRUFBRSw0MkJBbUJUOzZCQUNRLDZCQUE2QjtpQkFDdkM7O0lBVUQsd0JBQUM7Q0FBQSxBQWpDRCxDQXdCdUMsU0FBUyxHQVMvQztTQVRZLGlCQUFpQjs7O0lBQzVCLDJDQU9FIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBGaWVsZFR5cGUgfSBmcm9tICdAbmd4LWZvcm1seS9jb3JlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnZm9ybWx5LWZpZWxkLWlvbi1zZWxlY3QnLFxuICB0ZW1wbGF0ZTogYFxuICAgIDwhLS0gbmctY29udGFpbmVyIHVzZWQgYXMgYSB3b3JrYXJvdW5kIGZvciBodHRwczovL2dpdGh1Yi5jb20vaW9uaWMtdGVhbS9pb25pYy9pc3N1ZXMvMTkzMjQgLS0+XG4gICAgPG5nLWNvbnRhaW5lciAqbmdJZj1cInRvLm9wdGlvbnMgfCBmb3JtbHlTZWxlY3RPcHRpb25zOmZpZWxkIHwgYXN5bmM7IGxldCBzZWxlY3RPcHRpb25zXCI+XG4gICAgICA8aW9uLXNlbGVjdFxuICAgICAgICBbc3R5bGUuYWxpZ24tc2VsZl09XCJ0by5sYWJlbFBvc2l0aW9uID09PSAnZmxvYXRpbmcnID8gJ3N0cmV0Y2gnOicnXCJcbiAgICAgICAgW3N0eWxlLm1heC13aWR0aC4lXT1cInRvLmxhYmVsUG9zaXRpb24gPT09ICdmbG9hdGluZycgPyAxMDAgOiAnJ1wiXG5cbiAgICAgICAgW2Zvcm1Db250cm9sXT1cImZvcm1Db250cm9sXCJcbiAgICAgICAgW2NvbXBhcmVXaXRoXT1cInRvLmNvbXBhcmVXaXRoXCJcbiAgICAgICAgW2lvbkZvcm1seUF0dHJpYnV0ZXNdPVwiZmllbGRcIlxuICAgICAgICBbbXVsdGlwbGVdPVwidG8ubXVsdGlwbGVcIlxuICAgICAgICBbaW50ZXJmYWNlXT1cInRvLmludGVyZmFjZVwiXG4gICAgICAgIFtva1RleHRdPVwidG8ub2tUZXh0XCJcbiAgICAgICAgW2NhbmNlbFRleHRdPVwidG8uY2FuY2VsVGV4dFwiPlxuICAgICAgICA8aW9uLXNlbGVjdC1vcHRpb24gKm5nRm9yPVwibGV0IG9wdGlvbiBvZiBzZWxlY3RPcHRpb25zXCIgW3ZhbHVlXT1cIm9wdGlvbi52YWx1ZVwiIFtkaXNhYmxlZF09XCJvcHRpb24uZGlzYWJsZWRcIj5cbiAgICAgICAgICAgIHt7IG9wdGlvbi5sYWJlbCB9fVxuICAgICAgICA8L2lvbi1zZWxlY3Qtb3B0aW9uPlxuICAgICAgPC9pb24tc2VsZWN0PlxuICAgIDwvbmctY29udGFpbmVyPlxuICBgLFxuICBzdHlsZXM6IFsnOmhvc3QgeyBkaXNwbGF5OiBpbmhlcml0OyB9J10sXG59KVxuZXhwb3J0IGNsYXNzIEZvcm1seUZpZWxkU2VsZWN0IGV4dGVuZHMgRmllbGRUeXBlIHtcbiAgZGVmYXVsdE9wdGlvbnMgPSB7XG4gICAgdGVtcGxhdGVPcHRpb25zOiB7XG4gICAgICBvcHRpb25zOiBbXSxcbiAgICAgIGNvbXBhcmVXaXRoKG8xOiBhbnksIG8yOiBhbnkpIHtcbiAgICAgICAgcmV0dXJuIG8xID09PSBvMjtcbiAgICAgIH0sXG4gICAgfSxcbiAgfTtcbn1cbiJdfQ==