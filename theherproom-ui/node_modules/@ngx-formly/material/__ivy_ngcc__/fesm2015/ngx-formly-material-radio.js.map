{"version":3,"file":"ngx-formly-material-radio.js","sources":["@ngx-formly/material/radio/radio.type.ts","@ngx-formly/material/radio/radio.module.ts"],"names":["wrapProperty"],"mappings":"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","sourcesContent":["import { Component, ViewChild, AfterViewInit, OnDestroy } from '@angular/core';\nimport { FieldType } from '@ngx-formly/material/form-field';\nimport { MatRadioGroup } from '@angular/material/radio';\nimport { ÉµwrapProperty as wrapProperty } from '@ngx-formly/core';\n\n@Component({\n  selector: 'formly-field-mat-radio',\n  template: `\n    <mat-radio-group\n      [formControl]=\"formControl\"\n      [formlyAttributes]=\"field\"\n      [required]=\"to.required\"\n      [tabindex]=\"to.tabindex\">\n      <mat-radio-button *ngFor=\"let option of to.options | formlySelectOptions:field | async; let i = index;\"\n        [id]=\"id + '_' + i\"\n        [color]=\"to.color\"\n        [labelPosition]=\"to.labelPosition\"\n        [disabled]=\"option.disabled\"\n        [value]=\"option.value\">\n        {{ option.label }}\n      </mat-radio-button>\n    </mat-radio-group>\n  `,\n})\nexport class FormlyFieldRadio extends FieldType implements AfterViewInit, OnDestroy {\n  @ViewChild(MatRadioGroup) radioGroup!: MatRadioGroup;\n  defaultOptions = {\n    templateOptions: {\n      hideFieldUnderline: true,\n      floatLabel: 'always',\n      options: [],\n      tabindex: -1,\n    },\n  };\n\n  private focusObserver!: Function;\n  ngAfterViewInit() {\n    this.focusObserver = wrapProperty(this.field, 'focus', ({ currentValue }) => {\n      if (\n        this.to.tabindex === -1\n        && currentValue\n        && this.radioGroup._radios.length > 0\n      ) {\n        // https://github.com/ngx-formly/ngx-formly/issues/2498\n        setTimeout(() => {\n          const radio = this.radioGroup.selected\n            ? this.radioGroup.selected\n            : this.radioGroup._radios.first;\n\n          radio._elementRef.nativeElement.focus({ preventScroll: true });\n        });\n      }\n    });\n  }\n\n  // TODO: find a solution to prevent scroll on focus\n  onContainerClick() {}\n\n  ngOnDestroy() {\n    this.focusObserver && this.focusObserver();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormlyModule } from '@ngx-formly/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormlySelectModule } from '@ngx-formly/core/select';\n\nimport { FormlyMatFormFieldModule } from '@ngx-formly/material/form-field';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { FormlyFieldRadio } from './radio.type';\n\n@NgModule({\n  declarations: [FormlyFieldRadio],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    MatRadioModule,\n\n    FormlyMatFormFieldModule,\n    FormlySelectModule,\n    FormlyModule.forChild({\n      types: [{\n        name: 'radio',\n        component: FormlyFieldRadio,\n        wrappers: ['form-field'],\n      }],\n    }),\n  ],\n})\nexport class FormlyMatRadioModule { }\n"]}